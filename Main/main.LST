C51 COMPILER V9.52.0.0   MAIN                                                              06/30/2021 22:52:58 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <REGX51.H>
   2          //Khai bao ket noi IC 74595
   3          
   4          sbit IDX0_IC595_SHCP = P0^0;    //xung clock
   5          sbit IDX0_IC595_DS = P0^1;    // chan data
   6          sbit IDX0_IC595_STCP = P0^2;  // chan chot du lieu 
   7          
   8          sbit IDX1_IC595_SHCP = P0^3;    //xung clock
   9          sbit IDX1_IC595_DS = P0^4;    // chan data
  10          sbit IDX1_IC595_STCP = P0^5;  // chan chot du lieu 
  11          
  12          sbit IDX2_IC595_SHCP = P1^0;    //xung clock
  13          sbit IDX2_IC595_DS = P1^1;    // chan data
  14          sbit IDX2_IC595_STCP = P1^2;  // chan chot du lieu 
  15          
  16          sbit IDX3_IC595_SHCP = P1^3;    //xung clock
  17          sbit IDX3_IC595_DS = P1^4;    // chan data
  18          sbit IDX3_IC595_STCP = P1^5;  // chan chot du lieu 
  19          
  20          sbit ledStart = P3^4;
  21          sbit ledUart = P3^5;
  22          sbit button = P3^6;
  23          sbit led1 = P3^7;
  24          sbit ledCustom = P1^7 ;
  25          sbit ledCheck = P1^6 ;
  26          
  27          unsigned char STATE_595_0 = 0x00;
  28          unsigned char STATE_595_1 = 0x00;
  29          unsigned char STATE_595_2 = 0x00;
  30          unsigned char STATE_595_3 = 0x00;
  31          ////////////////////////////////
  32          unsigned char r_data;
  33          unsigned char START_BYTE= 0;
  34          unsigned char MODE= 0;
  35          unsigned char Count = 0 ;
  36          ////////////////////////////////
  37          unsigned char isReceiveLength =  0;
  38          unsigned char lengthOfEffect = 0 ;
  39          unsigned char storage[100];
  40          // unsigned char isStateOrDelay = 0 ; // = 0 means wait for led value, =1 means wait for delay value
  41          
  42          
  43          
  44          void OUT_BYTE_LED(unsigned char value, unsigned char idx)
  45          {
  46   1        if (idx == 0)
  47   1        {
  48   2          unsigned char i;
  49   2          STATE_595_0 = value;
  50   2          for (i = 0 ; i < 8 ; i++)
  51   2          {
  52   3            IDX0_IC595_DS = !(value & (0x80 >>i));
  53   3            IDX0_IC595_SHCP = 1;
  54   3            IDX0_IC595_SHCP = 0 ;
  55   3          }
C51 COMPILER V9.52.0.0   MAIN                                                              06/30/2021 22:52:58 PAGE 2   

  56   2          IDX0_IC595_STCP = 1 ;
  57   2          IDX0_IC595_STCP = 0 ; 
  58   2        }
  59   1        else if (idx == 1)
  60   1        {
  61   2          unsigned char i;
  62   2          STATE_595_1 = value;
  63   2          for (i = 0 ; i < 8 ; i++)
  64   2          {
  65   3            IDX1_IC595_DS = !(value & (0x80 >>i));
  66   3            IDX1_IC595_SHCP = 1;
  67   3            IDX1_IC595_SHCP = 0 ;
  68   3          }
  69   2          IDX1_IC595_STCP = 1 ;
  70   2          IDX1_IC595_STCP = 0 ; 
  71   2        }
  72   1        else if (idx == 2)
  73   1        {
  74   2          unsigned char i;
  75   2          STATE_595_2 = value;
  76   2          for (i = 0 ; i < 8 ; i++)
  77   2          {
  78   3            IDX2_IC595_DS = !(value & (0x80 >>i));
  79   3            IDX2_IC595_SHCP = 1;
  80   3            IDX2_IC595_SHCP = 0 ;
  81   3          }
  82   2          IDX2_IC595_STCP = 1 ;
  83   2          IDX2_IC595_STCP = 0 ; 
  84   2        }
  85   1        
  86   1        else 
  87   1        {
  88   2          unsigned char i;
  89   2          STATE_595_3 = value;
  90   2          for (i = 0 ; i < 8 ; i++)
  91   2          {
  92   3            IDX3_IC595_DS = !(value & (0x80 >>i));
  93   3            IDX3_IC595_SHCP = 1;
  94   3            IDX3_IC595_SHCP = 0 ;
  95   3          }
  96   2          IDX3_IC595_STCP = 1 ;
  97   2          IDX3_IC595_STCP = 0 ; 
  98   2        }
  99   1        
 100   1        
 101   1      }
 102          
 103          
 104          
 105          void OUT_BIT_LED(unsigned char idx, unsigned char idx_595)
 106          {
 107   1        if (idx_595 == 0)
 108   1        {
 109   2          STATE_595_0 |= (0x01 << idx) ; 
 110   2          OUT_BYTE_LED(STATE_595_0, idx_595);
 111   2        }
 112   1        else if (idx_595 == 1)
 113   1        {
 114   2          STATE_595_1 |= (0x01 << idx) ; 
 115   2          OUT_BYTE_LED(STATE_595_1, idx_595);
 116   2        }
 117   1        else if (idx_595 == 2)
C51 COMPILER V9.52.0.0   MAIN                                                              06/30/2021 22:52:58 PAGE 3   

 118   1        {
 119   2          STATE_595_2 |= (0x01 << idx) ; 
 120   2          OUT_BYTE_LED(STATE_595_2, idx_595);
 121   2        }
 122   1        else 
 123   1        {
 124   2          STATE_595_3 |= (0x01 << idx) ; 
 125   2          OUT_BYTE_LED(STATE_595_3, idx_595);
 126   2        }
 127   1      }
 128           /////////////////////////////
 129          
 130          
 131          //khoi tao
 132          void UART_Init()
 133          {
 134   1        TMOD = 0x21;    /* Timer 1, 8-bit auto reload mode */
 135   1        TH1 = 0xFD;   /* Load value for 9600 baud rate */ //F3
 136   1        SCON = 0x50;    /* Mode 1, reception enable */
 137   1        TR1 = 1;
 138   1        IE=0X90;    /* Start timer 1 */
 139   1      }
 140          
 141          
 142          void HardMode_Handler(unsigned char Data)
 143          {
 144   1        if (Data >= 0 && Data < 256)
 145   1        {
 146   2          OUT_BYTE_LED(Data, Count);
 147   2          Count++;
 148   2          if (Count == 4)
 149   2          {
 150   3            Count = 0 ;         
 151   3            START_BYTE = 0 ;
 152   3            MODE = 0 ;              // clear mode
 153   3          }
 154   2        }
 155   1        else
 156   1        {
 157   2          // Out of range data 307,2
 158   2          // led on
 159   2        }
 160   1      }
 161          
 162          void CustomMode_Handler(unsigned char Data)
 163          {
 164   1        if (isReceiveLength == 0)
 165   1        {
 166   2          OUT_BYTE_LED(0xff,0);
 167   2          lengthOfEffect = Data;
 168   2          isReceiveLength = 1;
 169   2        }
 170   1        else
 171   1        {
 172   2          if (Count == lengthOfEffect * 5)
 173   2          {
 174   3            START_BYTE = 0 ;            // nhan du roi clear mode
 175   3            MODE = 0 ;              
 176   3          }
 177   2          else
 178   2          {
 179   3            OUT_BYTE_LED(0xaa,1);
C51 COMPILER V9.52.0.0   MAIN                                                              06/30/2021 22:52:58 PAGE 4   

 180   3            ledCheck = ~ledCheck;
 181   3            storage[Count] = Data; 
 182   3            Count++ ;
 183   3            if (Count % 5 == 4)
 184   3            {
 185   4              OUT_BYTE_LED(0xff,1);
 186   4            }
 187   3          }
 188   2          
 189   2        }
 190   1      }
 191          
 192          
 193          void Receive_Handler(unsigned char Data)
 194          {
 195   1        TI = 0 ;                // send uart de kiem tra
 196   1        Data -= 0x30;           // se xoa 
 197   1        SBUF = Data ; 
 198   1        while(TI ==0);
 199   1        TI = 0;
 200   1        if (START_BYTE == 0 && Data == 0)     // chua co du lieu va nhan duoc start_byte
 201   1        {
 202   2          ledCustom = 0;
 203   2          isReceiveLength = 0;                // clear custom
 204   2          Count = 0 ;
 205   2          ledStart = 1 ;
 206   2          START_BYTE = 1;
 207   2        }
 208   1        else if (START_BYTE == 1 && MODE == 0 && (Data > 0 && Data < 5))  // neu da start va mode chua co, thi ch
             -eck xem mode byte co dung format k __ mode 1 mode 2
 209   1        {
 210   2          MODE = Data;
 211   2        }
 212   1        else if (START_BYTE !=0 && MODE != 0)
 213   1        {
 214   2          if (MODE == 1 || MODE == 2 || MODE == 3)
 215   2          {
 216   3            ledCustom = 0;
 217   3            HardMode_Handler(Data);
 218   3          }
 219   2          else if (MODE == 4)
 220   2          {
 221   3            ledCustom = ~ledCustom;
 222   3            CustomMode_Handler(Data);
 223   3          }
 224   2          else
 225   2          {
 226   3            // Turn on LED
 227   3            // should not reach here
 228   3          }
 229   2        }
 230   1        else        // chua hop sai
 231   1        {
 232   2          ledCustom = 0;
 233   2          ledStart = 0 ;
 234   2          START_BYTE = 0 ;
 235   2          MODE = 0 ;
 236   2        }
 237   1        RI = 0;
 238   1      }
 239          
 240          
C51 COMPILER V9.52.0.0   MAIN                                                              06/30/2021 22:52:58 PAGE 5   

 241          void ISR_UART(void) interrupt 4
 242          {
 243   1        if(RI == 1)           //Kiem tra xem la ngat nhan hay truyen
 244   1        { 
 245   2          ledUart = ~ledUart;
 246   2          r_data = SBUF;          //nhan du lieu
 247   2          Receive_Handler(r_data);
 248   2        }
 249   1      
 250   1        else if (TI==1)
 251   1        {
 252   2          TI=0;
 253   2        }
 254   1      }
 255          
 256          
 257          void Custom_delay (unsigned char delayTime)
 258          {
 259   1        unsigned char i ;
 260   1        TMOD = 0x21; 
 261   1        TF0 = 0;
 262   1        for (i = 0 ; i < delayTime; i ++)
 263   1        {
 264   2          TH0 = 0xDC ; 
 265   2          TL0 = 0x00; // thach anh = 12 TL0 = 0x18;
 266   2          TR0 = 1; 
 267   2          while(TF0 == 0);
 268   2          TF0 = 0; 
 269   2          TR0 = 0 ;
 270   2        }
 271   1      }
 272          
 273          
 274          
 275          void main()
 276          {
 277   1        
 278   1      //  // INIT 32 LED
 279   1        OUT_BYTE_LED(0x00,0);
 280   1        OUT_BYTE_LED(0x00,1);
 281   1        OUT_BYTE_LED(0x00,2);
 282   1        OUT_BYTE_LED(0x00,3);
 283   1        
 284   1        OUT_BYTE_LED(0x00,0);
 285   1        OUT_BYTE_LED(0x00,1);
 286   1        OUT_BYTE_LED(0x00,2);
 287   1        OUT_BYTE_LED(0x00,3);
 288   1        
 289   1        UART_Init();
 290   1           
 291   1        while(1)
 292   1        {
 293   2          unsigned char i;
 294   2          
 295   2          if (Count == lengthOfEffect * 5 && isReceiveLength == 1)          // neu da nhan duoc tin hieu thi 
 296   2          {
 297   3            MODE = 0 ;            // clear and wait for another mode
 298   3            START_BYTE = 0 ; 
 299   3            for (i = 0 ; i < lengthOfEffect* 5 ; i++)
 300   3            {
 301   4              if (i % 5 == 4)       
 302   4              {
C51 COMPILER V9.52.0.0   MAIN                                                              06/30/2021 22:52:58 PAGE 6   

 303   5                Custom_delay(storage[i]);
 304   5              }
 305   4              else if (i % 5 == 0)
 306   4              {
 307   5                OUT_BYTE_LED(storage[i], 0);
 308   5                OUT_BYTE_LED(storage[i+1], 1);
 309   5                OUT_BYTE_LED(storage[i+2], 2);
 310   5                OUT_BYTE_LED(storage[i+3], 3);
 311   5                i = i + 3 ;
 312   5              }
 313   4            }
 314   3          }
 315   2        }
 316   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    797    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    110       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
